diff -r -U 5 freenasUI-old/api/resources.py freenasUI/api/resources.py
--- freenasUI-old/middleware/notifier.py 2017-12-05 10:49:07.640246773 +0800
+++ freenasUI/middleware/notifier.py     2018-03-08 18:38:24.794835363 +0800
@@ -374,13 +374,8 @@
     def reload(self, what):
         """ Reload the service specified by "what".

-        The helper will use method self._reload_[what]() to reload the service.
-        If the method does not exist, the helper will try self.restart of the
-        service instead."""
-        try:
-            self._simplecmd("reload", what)
-        except:
-            self.restart(what)
+        The helper will use method self._reload_[what]() to reload the service."""
+        self._simplecmd("reload", what)
         return self.started(what)

     def change(self, what):
@@ -446,6 +441,27 @@
     def _reload_iscsitarget(self):
         self._system("/usr/sbin/service ix-ctld quietstart")
         self._system("/usr/sbin/service ctld reload")
+        reloadsWithNoIncrease = 0
+        lastProgress = -1
+        while True:
+               p1 = self._pipeopen('grep ^lun /etc/ctl.conf | wc -l')
+               stdout1, stderr1 = p1.communicate()
+               p2 = self._pipeopen('ctladm portlist -f iscsi | wc -l')
+               stdout2, stderr2 = p2.communicate()
+               expected=int(stdout1)
+               actual=int(stdout2) - 1 # Subtract one for the header row
+               if actual == expected:
+                      return
+               if lastProgress == actual:
+                      reloadsWithNoIncrease=reloadsWithNoIncrease+1
+               else:
+                      reloadsWithNoIncrease=0
+               if reloadsWithNoIncrease > 60:
+                      # eek, timeout
+                      log.error("Ctld timeout")
+                      raise IOError("timeout")
+               lastProgress = actual
+               self._system("sleep 1")

     def _start_collectd(self):
         self._system("/usr/sbin/service ix-collectd quietstart")

--- freenasUI-old/api/resources.py	2017-12-02 01:16:48.000000000 -0800
+++ freenasUI/api/resources.py	2017-12-03 22:11:21.170378190 -0800
@@ -2539,6 +2539,18 @@
             kwargs['srv_service'] = kwargs.pop('pk')
         return super(ServicesResourceMixin, self).obj_get(bundle, **kwargs)

+class AlizTestResource(DojoResource):
+
+    class Meta:
+        allowed_methods = ['get']
+        resource_name = 'system/aliztest'
+
+    def get_list(self, request, **kwargs):
+        try:
+            started = notifier().reload("iscsitarget")
+        except IOError:
+                return HttpResponse('ctld reload timed out', status=510)
+        return HttpResponse('OK', status=200)

 class RebootResource(DojoResource):

diff -r -U 5 freenasUI-old/services/forms.py freenasUI/services/forms.py
--- freenasUI-old/services/forms.py	2017-12-02 01:16:49.000000000 -0800
+++ freenasUI/services/forms.py	2017-12-03 22:11:21.173146279 -0800
@@ -1163,17 +1163,17 @@
         obj.iscsi_target_auth_peersecret = self.cleaned_data.get(
             'iscsi_target_auth_peersecret'
         )
         if commit:
             obj.save()
-        started = notifier().reload("iscsitarget")
-        if started is False and models.services.objects.get(
-            srv_service='iscsitarget'
-        ).srv_enable:
-            raise ServiceFailed(
-                "iscsitarget", _("The iSCSI service failed to reload.")
-            )
+#        started = notifier().reload("iscsitarget")
+#        if started is False and models.services.objects.get(
+#            srv_service='iscsitarget'
+#        ).srv_enable:
+#            raise ServiceFailed(
+#                "iscsitarget", _("The iSCSI service failed to reload.")
+#            )
         return obj
 
 
 class iSCSITargetToExtentForm(ModelForm):
     class Meta:
@@ -1234,13 +1234,13 @@
                 )
         return self.cleaned_data
 
     def save(self):
         super(iSCSITargetToExtentForm, self).save()
-        started = notifier().reload("iscsitarget")
-        if started is False and models.services.objects.get(srv_service='iscsitarget').srv_enable:
-            raise ServiceFailed("iscsitarget", _("The iSCSI service failed to reload."))
+#        started = notifier().reload("iscsitarget")
+#        if started is False and models.services.objects.get(srv_service='iscsitarget').srv_enable:
+#            raise ServiceFailed("iscsitarget", _("The iSCSI service failed to reload."))
 
 
 class iSCSITargetGlobalConfigurationForm(ModelForm):
 
     class Meta:
@@ -1298,13 +1298,13 @@
 
         return servers
 
     def save(self):
         obj = super(iSCSITargetGlobalConfigurationForm, self).save()
-        started = notifier().reload("iscsitarget")
-        if started is False and models.services.objects.get(srv_service='iscsitarget').srv_enable:
-            raise ServiceFailed("iscsitarget", _("The iSCSI service failed to reload."))
+#        started = notifier().reload("iscsitarget")
+#        if started is False and models.services.objects.get(srv_service='iscsitarget').srv_enable:
+#            raise ServiceFailed("iscsitarget", _("The iSCSI service failed to reload."))
         return obj
 
 
 class iSCSITargetExtentForm(ModelForm):
 
@@ -1639,13 +1639,13 @@
                 size = self.cleaned_data["iscsi_target_extent_filesize"]
                 if size.lower().endswith("b"):
                     size = size[:-1]
                 os.system("truncate -s %s %s" % (size, path))
 
-        started = notifier().reload("iscsitarget")
-        if started is False and models.services.objects.get(srv_service='iscsitarget').srv_enable:
-            raise ServiceFailed("iscsitarget", _("The iSCSI service failed to reload."))
+#        started = notifier().reload("iscsitarget")
+#        if started is False and models.services.objects.get(srv_service='iscsitarget').srv_enable:
+#            raise ServiceFailed("iscsitarget", _("The iSCSI service failed to reload."))
         return oExtent
 
 
 class iSCSITargetPortalForm(ModelForm):
          iscsi_target_portal_discoveryauthgroup = forms.ChoiceField(
@@ -1636,13 +1636,13 @@
         return tag
 
     def done(self, *args, **kwargs):
         super(iSCSITargetPortalForm, self).done(*args, **kwargs)
         # This must be done here and not on save() because it saves foreign keys
-        started = notifier().reload("iscsitarget")
-        if started is False and models.services.objects.get(srv_service='iscsitarget').srv_enable:
-            raise ServiceFailed("iscsitarget", _("The iSCSI service failed to reload."))
+#        started = notifier().reload("iscsitarget")
+#        if started is False and models.services.objects.get(srv_service='iscsitarget').srv_enable:
+#            raise ServiceFailed("iscsitarget", _("The iSCSI service failed to reload."))
 
 
 class iSCSITargetPortalIPForm(ModelForm):
 
     class Meta:
@@ -1726,17 +1726,17 @@
                 if not qs.exists():
                     break
                 i += 1
             o.iscsi_target_initiator_tag = i
         o.save()
-        started = notifier().reload("iscsitarget")
-        if started is False and models.services.objects.get(
-            srv_service='iscsitarget'
-        ).srv_enable:
-            raise ServiceFailed(
-                "iscsitarget", _("The iSCSI service failed to reload.")
-            )
+#        started = notifier().reload("iscsitarget")
+#        if started is False and models.services.objects.get(
+#            srv_service='iscsitarget'
+#        ).srv_enable:
+#            raise ServiceFailed(
+#                "iscsitarget", _("The iSCSI service failed to reload.")
+#            )
 
 
 class iSCSITargetGroupsInlineFormSet(FreeBaseInlineFormSet):
 
     def clean(self):
@@ -1798,13 +1798,13 @@
             raise forms.ValidationError(_("target is a reserved word, please choose a different name for this alias."))
         return alias
 
     def done(self, *args, **kwargs):
         super(iSCSITargetForm, self).done(*args, **kwargs)
-        started = notifier().reload("iscsitarget")
-        if started is False and models.services.objects.get(srv_service='iscsitarget').srv_enable:
-            raise ServiceFailed("iscsitarget", _("The iSCSI service failed to reload."))
+#        started = notifier().reload("iscsitarget")
+#        if started is False and models.services.objects.get(srv_service='iscsitarget').srv_enable:
+#            raise ServiceFailed("iscsitarget", _("The iSCSI service failed to reload."))
 
 
 class iSCSITargetGroupsForm(ModelForm):
 
     iscsi_target_authgroup = forms.ChoiceField(label=_("Authentication Group number"))
--- freenasUI-old/services/models.py	2017-12-02 01:16:50.000000000 -0800
+++ freenasUI/services/models.py	2017-12-03 22:13:49.935224534 -0800
@@ -655,11 +655,11 @@
                 log.error("Unable to sync iSCSI extent delete: %s", e)
 
         for te in iSCSITargetToExtent.objects.filter(iscsi_extent=self):
             te.delete()
         super(iSCSITargetExtent, self).delete()
-        notifier().reload("iscsitarget")
+#        notifier().reload("iscsitarget")
 
     def save(self, *args, **kwargs):
         if not self.iscsi_target_extent_naa:
             self.iscsi_target_extent_naa = '0x6589cfc000000%s' % (
                 hashlib.sha256(str(uuid.uuid4())).hexdigest()[0:19]
@@ -710,15 +710,15 @@
         portals = iSCSITargetPortal.objects.all().order_by(
             'iscsi_target_portal_tag')
         for portal, idx in zip(portals, xrange(1, len(portals) + 1)):
             portal.iscsi_target_portal_tag = idx
             portal.save()
-        started = notifier().reload("iscsitarget")
-        if started is False and services.objects.get(
-                srv_service='iscsitarget').srv_enable:
-            raise ServiceFailed("iscsitarget",
-                                _("The iSCSI service failed to reload."))
+#        started = notifier().reload("iscsitarget")
+#        if started is False and services.objects.get(
+#                srv_service='iscsitarget').srv_enable:
+#            raise ServiceFailed("iscsitarget",
+#                                _("The iSCSI service failed to reload."))
 
 
 class iSCSITargetPortalIP(Model):
     iscsi_target_portalip_portal = models.ForeignKey(
         iSCSITargetPortal,
@@ -922,17 +922,17 @@
 
     def delete(self):
         for te in iSCSITargetToExtent.objects.filter(iscsi_target=self):
             te.delete()
         super(iSCSITarget, self).delete()
-        started = notifier().reload("iscsitarget")
-        if started is False and services.objects.get(
-                srv_service='iscsitarget').srv_enable:
-            raise ServiceFailed(
-                "iscsitarget",
-                _("The iSCSI service failed to reload.")
-            )
+#        started = notifier().reload("iscsitarget")
+#        if started is False and services.objects.get(
+#                srv_service='iscsitarget').srv_enable:
+#            raise ServiceFailed(
+#                "iscsitarget",
+#                _("The iSCSI service failed to reload.")
+#            )
 
 
 class iSCSITargetGroups(Model):
     iscsi_target = models.ForeignKey(
         iSCSITarget,
@@ -1012,15 +1012,15 @@
     def __unicode__(self):
         return unicode(self.iscsi_target) + u' / ' + unicode(self.iscsi_extent)
 
     def delete(self):
         super(iSCSITargetToExtent, self).delete()
-        started = notifier().reload("iscsitarget")
-        if started is False and services.objects.get(
-                srv_service='iscsitarget').srv_enable:
-            raise ServiceFailed("iscsitarget",
-                                _("The iSCSI service failed to reload."))
+#        started = notifier().reload("iscsitarget")
+#        if started is False and services.objects.get(
+#                srv_service='iscsitarget').srv_enable:
+#            raise ServiceFailed("iscsitarget",
+#                                _("The iSCSI service failed to reload."))
 
 
 class FibreChannelToTarget(Model):
     fc_port = models.CharField(
         verbose_name=_('Port'),
diff -r -U 5 freenasUI-old/services/views.py freenasUI/services/views.py
--- freenasUI-old/services/views.py	2017-12-02 01:16:50.000000000 -0800
+++ freenasUI/services/views.py	2017-12-03 22:11:21.174053028 -0800
@@ -384,12 +384,12 @@
                 loader = True
                 qs.delete()
 
         i += 1
 
-    if i > 0:
-        notifier().reload("iscsitarget")
+#    if i > 0:
+#        notifier().reload("iscsitarget")
 
     for mibname, val in sysctl_set.items():
         role = sysctl.filter('dev.isp.%s.role' % mibname)
         if role:
             role = role[0]
diff -r -U 5 freenasUI-old/storage/views.py freenasUI/storage/views.py
--- freenasUI-old/storage/views.py	2017-12-02 01:16:52.000000000 -0800
+++ freenasUI/storage/views.py	2017-12-03 22:11:21.175211136 -0800
@@ -637,12 +637,12 @@
 
             if not error:
                 extents = iSCSITargetExtent.objects.filter(
                     iscsi_target_extent_type='ZVOL',
                     iscsi_target_extent_path='zvol/' + name)
-                if extents.exists():
-                    _n.reload("iscsitarget")
+#                if extents.exists():
+#                    _n.reload("iscsitarget")
                 return JsonResp(
                     request,
                     message=_("Zvol successfully edited."))
             else:
                 for field, err in errors.items():
diff -r -U 5 freenasUI-old/system/alertmods/activedirectory.py freenasUI/system/alertmods/activedirectory.py
--- freenasUI-old/system/alertmods/activedirectory.py	2017-12-02 01:16:52.000000000 -0800
+++ freenasUI/system/alertmods/activedirectory.py	2017-12-03 22:11:21.175795499 -0800
@@ -12,6 +12,6 @@
         if os.path.exists('/tmp/.adalert'):
             alerts.append(Alert(Alert.WARN, "ActiveDirectory did not bind to the domain"))
 
         return alerts
 
-alertPlugins.register(ADAlert)
+###alertPlugins.register(ADAlert)
diff -r -U 5 freenasUI-old/system/alertmods/boot_volume_status.py freenasUI/system/alertmods/boot_volume_status.py
--- freenasUI-old/system/alertmods/boot_volume_status.py	2017-12-02 01:16:52.000000000 -0800
+++ freenasUI/system/alertmods/boot_volume_status.py	2017-12-03 22:11:21.176368756 -0800
@@ -29,6 +29,6 @@
             alerts.append(
                 self.on_volume_status_not_healthy(state, status)
             )
         return alerts
 
-alertPlugins.register(BootVolumeStatusAlert)
+###alertPlugins.register(BootVolumeStatusAlert)
diff -r -U 5 freenasUI-old/system/alertmods/collectd.py freenasUI/system/alertmods/collectd.py
--- freenasUI-old/system/alertmods/collectd.py	2017-12-02 01:16:52.000000000 -0800
+++ freenasUI/system/alertmods/collectd.py	2017-12-03 22:11:21.176956051 -0800
@@ -45,6 +45,6 @@
                 msg = k
             alerts.append(Alert(l, msg))
 
         return alerts
 
-alertPlugins.register(CollectdAlert)
+###alertPlugins.register(CollectdAlert)
diff -r -U 5 freenasUI-old/system/alertmods/http_ssl.py freenasUI/system/alertmods/http_ssl.py
--- freenasUI-old/system/alertmods/http_ssl.py	2017-12-02 01:16:52.000000000 -0800
+++ freenasUI/system/alertmods/http_ssl.py	2017-12-03 22:11:21.177585391 -0800
@@ -34,6 +34,6 @@
                 'malformed or invalid and cannot be used for any services.'
                 ' This Alert will remain here until the CA is deleted'
             ) % {'CA_name': CA_name.split('_', 2)[-1]}))
         return alerts
 
-alertPlugins.register(SSLAlert)
+###alertPlugins.register(SSLAlert)
diff -r -U 5 freenasUI-old/system/alertmods/httpd_bindaddr.py freenasUI/system/alertmods/httpd_bindaddr.py
--- freenasUI-old/system/alertmods/httpd_bindaddr.py	2017-12-02 01:16:52.000000000 -0800
+++ freenasUI/system/alertmods/httpd_bindaddr.py	2017-12-03 22:11:21.178168705 -0800
@@ -20,6 +20,6 @@
                         _('The WebGUI Address could not bind to %s; using '
                             'wildcard') % (address,),
                     )
                 ]
 
-alertPlugins.register(HTTPDBindAlert)
+###alertPlugins.register(HTTPDBindAlert)
diff -r -U 5 freenasUI-old/system/alertmods/iscsi_portal_ips.py freenasUI/system/alertmods/iscsi_portal_ips.py
--- freenasUI-old/system/alertmods/iscsi_portal_ips.py	2017-12-02 01:16:52.000000000 -0800
+++ freenasUI/system/alertmods/iscsi_portal_ips.py	2017-12-03 22:11:21.178759353 -0800
@@ -21,6 +21,6 @@
                     _('The following IPs are bind to iSCSI Portal but were not'
                       ' found in the system: %s') % (', '.join(ips))
                 )
             ]
 
-alertPlugins.register(PortalIPAlert)
+###alertPlugins.register(PortalIPAlert)
diff -r -U 5 freenasUI-old/system/alertmods/mpr_firmware.py freenasUI/system/alertmods/mpr_firmware.py
--- freenasUI-old/system/alertmods/mpr_firmware.py	2017-12-02 01:16:52.000000000 -0800
+++ freenasUI/system/alertmods/mpr_firmware.py	2017-12-03 22:11:21.179329607 -0800
@@ -44,6 +44,6 @@
                     }
                 ))
 
         return alerts
 
-alertPlugins.register(MPRFirmwareAlert)
+###alertPlugins.register(MPRFirmwareAlert)
diff -r -U 5 freenasUI-old/system/alertmods/mps_firmware.py freenasUI/system/alertmods/mps_firmware.py
--- freenasUI-old/system/alertmods/mps_firmware.py	2017-12-02 01:16:52.000000000 -0800
+++ freenasUI/system/alertmods/mps_firmware.py	2017-12-03 22:11:21.179857258 -0800
@@ -57,6 +57,6 @@
                         }
                     ))
 
         return alerts
 
-alertPlugins.register(MPSFirmwareAlert)
+###alertPlugins.register(MPSFirmwareAlert)
diff -r -U 5 freenasUI-old/system/alertmods/multipaths_status.py freenasUI/system/alertmods/multipaths_status.py
--- freenasUI-old/system/alertmods/multipaths_status.py	2017-12-02 01:16:52.000000000 -0800
+++ freenasUI/system/alertmods/multipaths_status.py	2017-12-03 22:11:21.180408026 -0800
@@ -21,6 +21,6 @@
                     ),
                     hardware=True,
                 )
             ]
 
-alertPlugins.register(MultipathAlert)
+###alertPlugins.register(MultipathAlert)
diff -r -U 5 freenasUI-old/system/alertmods/nfs_bindaddr.py freenasUI/system/alertmods/nfs_bindaddr.py
--- freenasUI-old/system/alertmods/nfs_bindaddr.py	2017-12-02 01:16:52.000000000 -0800
+++ freenasUI/system/alertmods/nfs_bindaddr.py	2017-12-03 22:11:21.180937493 -0800
@@ -14,6 +14,6 @@
                     Alert.WARN,
                     _('NFS services could not bind specific IPs, using wildcard'),
                 )
             ]
 
-alertPlugins.register(NFSBindAlert)
+###alertPlugins.register(NFSBindAlert)
diff -r -U 5 freenasUI-old/system/alertmods/replication_status.py freenasUI/system/alertmods/replication_status.py
--- freenasUI-old/system/alertmods/replication_status.py	2017-12-02 01:16:52.000000000 -0800
+++ freenasUI/system/alertmods/replication_status.py	2017-12-03 22:11:21.181611321 -0800
@@ -19,6 +19,6 @@
                     'message': repl.repl_lastresult,
                 },
             ))
         return alerts
 
-alertPlugins.register(ReplicationStatusAlert)
+###alertPlugins.register(ReplicationStatusAlert)
diff -r -U 5 freenasUI-old/system/alertmods/samba4.py freenasUI/system/alertmods/samba4.py
--- freenasUI-old/system/alertmods/samba4.py	2017-12-02 01:16:52.000000000 -0800
+++ freenasUI/system/alertmods/samba4.py	2017-12-03 22:11:21.182235004 -0800
@@ -36,6 +36,6 @@
                     % systemdataset.sys_pool
                 ),
             ]
 
 
-alertPlugins.register(Samba4Alert)
+###alertPlugins.register(Samba4Alert)
diff -r -U 5 freenasUI-old/system/alertmods/selftest.py freenasUI/system/alertmods/selftest.py
--- freenasUI-old/system/alertmods/selftest.py	2017-12-02 01:16:52.000000000 -0800
+++ freenasUI/system/alertmods/selftest.py	2017-12-03 22:11:21.182885645 -0800
@@ -29,6 +29,6 @@
                         alerts.append(Alert(lvl, match.group(2)))
                     else:
                         alerts.append(Alert(lvl, line))
         return alerts
 
-alertPlugins.register(ixSelfTestAlert)
+###alertPlugins.register(ixSelfTestAlert)
diff -r -U 5 freenasUI-old/system/alertmods/smart.py freenasUI/system/alertmods/smart.py
--- freenasUI-old/system/alertmods/smart.py	2017-12-02 01:16:52.000000000 -0800
+++ freenasUI/system/alertmods/smart.py	2017-12-03 22:11:21.183486490 -0800
@@ -22,6 +22,6 @@
                         continue
                     alerts.append(Alert(Alert.CRIT, msg, hardware=True))
 
         return alerts
 
-alertPlugins.register(SMARTAlert)
+###alertPlugins.register(SMARTAlert)
diff -r -U 5 freenasUI-old/system/alertmods/smartdstatus.py freenasUI/system/alertmods/smartdstatus.py
--- freenasUI-old/system/alertmods/smartdstatus.py	2017-12-02 01:16:52.000000000 -0800
+++ freenasUI/system/alertmods/smartdstatus.py	2017-12-03 22:11:21.184127843 -0800
@@ -23,6 +23,6 @@
         else:
             return None
 
         return alerts
 
-alertPlugins.register(SMARTDAlert)
+###alertPlugins.register(SMARTDAlert)
diff -r -U 5 freenasUI-old/system/alertmods/update_check.py freenasUI/system/alertmods/update_check.py
--- freenasUI-old/system/alertmods/update_check.py	2017-12-02 01:16:52.000000000 -0800
+++ freenasUI/system/alertmods/update_check.py	2017-12-03 22:11:21.184762839 -0800
@@ -67,7 +67,7 @@
             update_applied, msg = is_update_applied(data['update_version'], create_alert=False)
             if update_applied:
                 alerts.append(Alert(Alert.WARN, _(msg)))
         return alerts
 
-alertPlugins.register(UpdateCheckAlert)
-alertPlugins.register(UpdateAppliedAlert)
+###alertPlugins.register(UpdateCheckAlert)
+###alertPlugins.register(UpdateAppliedAlert)
diff -r -U 5 freenasUI-old/system/alertmods/upgrade_failed.py freenasUI/system/alertmods/upgrade_failed.py
--- freenasUI-old/system/alertmods/upgrade_failed.py	2017-12-02 01:16:52.000000000 -0800
+++ freenasUI/system/alertmods/upgrade_failed.py	2017-12-03 22:11:21.185394833 -0800
@@ -21,6 +21,6 @@
                     ),
                 )
             )
         return alerts
 
-alertPlugins.register(UpdateFailedAlert)
+###alertPlugins.register(UpdateFailedAlert)
diff -r -U 5 freenasUI-old/system/alertmods/vmwaresnap_fails.py freenasUI/system/alertmods/vmwaresnap_fails.py
--- freenasUI-old/system/alertmods/vmwaresnap_fails.py	2017-12-02 01:16:52.000000000 -0800
+++ freenasUI/system/alertmods/vmwaresnap_fails.py	2017-12-03 22:11:21.186058954 -0800
@@ -28,6 +28,6 @@
                 'snap': snapname,
                 'vms': ', '.join(vms),
             }))
         return alerts
 
-alertPlugins.register(VMWareSnapFailAlert)
+###alertPlugins.register(VMWareSnapFailAlert)
diff -r -U 5 freenasUI-old/system/alertmods/vmwaresnapdelete_fails.py freenasUI/system/alertmods/vmwaresnapdelete_fails.py
--- freenasUI-old/system/alertmods/vmwaresnapdelete_fails.py	2017-12-02 01:16:52.000000000 -0800
+++ freenasUI/system/alertmods/vmwaresnapdelete_fails.py	2017-12-03 22:11:21.186702402 -0800
@@ -28,6 +28,6 @@
                 'snap': snapname,
                 'vms': ', '.join(vms),
             }))
         return alerts
 
-alertPlugins.register(VMWareSnapDeleteFailAlert)
+###alertPlugins.register(VMWareSnapDeleteFailAlert)
diff -r -U 5 freenasUI-old/system/alertmods/volume_rekey.py freenasUI/system/alertmods/volume_rekey.py
--- freenasUI-old/system/alertmods/volume_rekey.py	2017-12-02 01:16:52.000000000 -0800
+++ freenasUI/system/alertmods/volume_rekey.py	2017-12-03 22:11:21.187365056 -0800
@@ -15,6 +15,6 @@
                 'sure you have working recovery keys, check logs files and '
                 'correct the error as it may result to data loss.'
             ), hardware=True))
         return alerts
 
-alertPlugins.register(VolRekeyAlert)
+###alertPlugins.register(VolRekeyAlert)
diff -r -U 5 freenasUI-old/system/alertmods/volume_status.py freenasUI/system/alertmods/volume_status.py
--- freenasUI-old/system/alertmods/volume_status.py	2017-12-02 01:16:52.000000000 -0800
+++ freenasUI/system/alertmods/volume_status.py	2017-12-03 22:11:21.188002776 -0800
@@ -37,6 +37,6 @@
                 alerts.append(
                     self.on_volume_status_not_healthy(vol, state, status)
                 )
         return alerts
 
-alertPlugins.register(VolumeStatusAlert)
+###alertPlugins.register(VolumeStatusAlert)
diff -r -U 5 freenasUI-old/system/alertmods/volume_version.py freenasUI/system/alertmods/volume_version.py
--- freenasUI-old/system/alertmods/volume_version.py	2017-12-02 01:16:52.000000000 -0800
+++ freenasUI/system/alertmods/volume_version.py	2017-12-03 22:11:21.188646015 -0800
@@ -35,6 +35,6 @@
                 ' using "zfs upgrade" command line.'
             )))
 
         return alerts
 
-alertPlugins.register(VolumeVersionAlert)
+###alertPlugins.register(VolumeVersionAlert)
diff -r -U 5 freenasUI-old/system/alertmods/zpool_capacity.py freenasUI/system/alertmods/zpool_capacity.py
--- freenasUI-old/system/alertmods/zpool_capacity.py	2017-12-02 01:16:52.000000000 -0800
+++ freenasUI/system/alertmods/zpool_capacity.py	2017-12-03 22:11:21.189269208 -0800
@@ -54,6 +54,6 @@
                         },
                     )
                 )
         return alerts
 
-alertPlugins.register(ZpoolCapAlert)
+###alertPlugins.register(ZpoolCapAlert)
diff -r -U 5 freenasUI-old/urls.py freenasUI/urls.py
--- freenasUI-old/urls.py	2017-12-02 01:16:53.000000000 -0800
+++ freenasUI/urls.py	2017-12-03 22:11:21.189900992 -0800
@@ -39,10 +39,11 @@
     BootEnvResource,
     DebugResource,
     ConfigFactoryRestoreResource,
     FCPortsResource,
     PermissionResource,
+    AlizTestResource,
     RebootResource,
     ShutdownResource,
     SnapshotResource,
     VersionResource,
     VolumeImportResource,
@@ -58,10 +59,11 @@
 v1_api.register(BootEnvResource())
 v1_api.register(DebugResource())
 v1_api.register(ConfigFactoryRestoreResource())
 v1_api.register(FCPortsResource())
 v1_api.register(PermissionResource())
+v1_api.register(AlizTestResource())
 v1_api.register(RebootResource())
 v1_api.register(ShutdownResource())
 v1_api.register(SnapshotResource())
 v1_api.register(VersionResource())
 v1_api.register(VolumeImportResource())
